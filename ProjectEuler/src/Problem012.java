/**
 * 
 * @author JGreeny
 *
 * @problem Project Euler Problem 12:
 * 			The sequence of triangle numbers is generated by adding the natural numbers.
 * 			So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 						1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * 
 * 			Let us list the factors of the first seven triangle numbers:
 * 
 * 			1: 1
 * 			3: 1,3
 * 			6: 1,2,3,6
 * 			10: 1,2,5,10
 * 			15: 1,3,5,15
 * 			21: 1,3,7,21
 * 			28: 1,2,4,7,14,28
 * 
 * 			We can see that 28 is the first triangle number to have over five divisors.
 * 			What is the value of the first triangle number to have over five hundred divisors?
 * 			
 * @solution Continue to generate the sequence of triangle numbers.
 * 			 Test each number that is generated for divisibility to find the list of factors.
 * 			 Once a number is found that has > 500 divisors, answer is found.
 */

public class Problem012 {
	public static void main(String[] args) {
		int count = 1,
			numDiv = 0;
		
		long triangle = 0L;
		
		while (numDiv <= 500) {
			triangle += count;
			numDiv = findDiv(triangle);
			count++;
		}
		
		System.out.println(triangle);
	}
	
	public static int findDiv(long triangle) {
		int div = 2;
		double root = Math.sqrt(triangle);
		
		if (root % 1 == 0)
			div++;
		
		for (int i = 2; i < root; i++) {
			if (triangle % i == 0)
				div += 2;
		}
		
		return div;
	}
}
